import pandas as pd
import numpy as np
import seaborn as sns


banknote_df = pd.read_csv(r"C:\Users\Manuel\Desktop\bank_note.csv")

#print(banknote_df.head())

#dividing data into features and labels

X=banknote_df.drop(["class"],axis=1)
y=banknote_df.filter(["class"],axis=1)

#divide trainig and datasets 80-20%

from sklearn.model_selection import train_test_split

X_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.20,random_state=0)


#applying scaling on trainig and test data

from sklearn.preprocessing import StandardScaler
sc=StandardScaler()
X_train=sc.fit_transform(X_train)
X_test=sc.transform(X_test)

#importing LDA class

from sklearn.discriminant_analysis import LinearDiscriminantAnalysis as LDA

#creating object of the LDA class

lda=LDA()

#training PCA model on training data

X_train = lda.fit_transform(X_train, y_train)

#making predictions on test data

X_test = lda.transform(X_test)

#printing variance ratios

variance_ratios=lda.explained_variance_ratio_
print(variance_ratios)

#creating object of the LDA class

lda = LDA(n_components=1)

#training PCA model on training data

X_train=lda.fit_transform(X_train, y_train)

#making predictions on test data

X_test = lda.transform(X_test)

#making predictions using logistic regression

from sklearn.linear_model import LogisticRegression

#training the logistic regression model

lg=LogisticRegression()
lg.fit(X_train, y_train)

#predicting the Test set results
y_pred = lg.predict(X_test)

#predicting results

from sklearn.metrics import accuracy_score

print(accuracy_score(y_test, y_pred))